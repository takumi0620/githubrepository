package com.example.repository.list.model.data

import androidx.room.Embedded
import androidx.room.Entity
import androidx.room.PrimaryKey

@Entity
data class RepositoryData(
    @PrimaryKey
    var id: Int = 0,
    var node_id: String = "",
    var name: String = "",
    var full_name: String = "",
    var private: Boolean? = null,
    @Embedded(prefix = "owner_")
    var owner: Owner = Owner("", 0, "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", true   ),
    var html_url: String = "",
    var description: String? = null,
    var fork: Boolean = true,
    var url: String = "",
    var forks_url: String = "",
    var keys_url: String = "",
    var collaborators_url: String = "",
    var teams_url: String = "",
    var hooks_url: String = "",
    var issue_events_url: String = "",
    var events_url: String = "",
    var assignees_url: String = "",
    var branches_url: String = "",
    var tags_url: String = "",
    var blobs_url: String = "",
    var git_tags_url: String = "",
    var git_refs_url: String = "",
    var trees_url: String = "",
    var statuses_url: String = "",
    var languages_url: String = "",
    var stargazers_url: String = "",
    var contributors_url: String = "",
    var subscribers_url: String = "",
    var subscription_url: String = "",
    var commits_url: String = "",
    var git_commits_url: String = "",
    var comments_url: String = "",
    var issue_comment_url: String = "",
    var contents_url: String = "",
    var compare_url: String = "",
    var merges_url: String = "",
    var archive_url: String = "",
    var downloads_url: String = "",
    var issues_url: String = "",
    var pulls_url: String = "",
    var milestones_url: String = "",
    var notifications_url: String = "",
    var labels_url: String = "",
    var releases_url: String = "",
    var deployments_url: String = "",
    var created_at: String = "",
    var updated_at: String = "",
    var pushed_at: String = "",
    var git_url: String = "",
    var ssh_url: String = "",
    var clone_url: String = "",
    var svn_url: String = "",
    var homepage: String? = null,
    var size: Int = 0,
    var stargazers_count: Int = 0,
    var watchers_count: Int = 0,
    var language: String? = null,
    var has_issues: Boolean? = null,
    var has_projects: Boolean? = null,
    var has_downloads: Boolean = true,
    var has_wiki: Boolean? = null,
    var has_pages: Boolean = true,
    var forks_count: Int = 0,
    var mirror_url: String? = null,
    var archived: Boolean = true,
    var disabled: Boolean = true,
    var open_issues_count: Int = 0,
    @Embedded(prefix = "license_")
    var license: License? = null,
    var forks: Int = 0,
    var open_issues: Int = 0,
    var watchers: Int = 0,
    var default_branch: String = ""
)

data class Owner(
    var login: String = "",
    var id: Int = 0,
    var node_id: String = "",
    var avatar_url: String = "",
    var gravatar_id: String = "",
    var url: String = "",
    var html_url: String = "",
    var followers_url: String = "",
    var following_url: String = "",
    var gists_url: String = "",
    var starred_url: String = "",
    var subscriptions_url: String = "",
    var organizations_url: String = "",
    var repos_url: String = "",
    var events_url: String = "",
    var received_events_url: String = "",
    var type: String = "",
    var site_admin: Boolean = true
)

data class License (
    var key: String = "",
    var name: String = "",
    var spdx_id: String = "",
    var url: String = "",
    var node_id: String = ""
)